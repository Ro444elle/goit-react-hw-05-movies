{"version":3,"file":"static/js/247.262410a5.chunk.js","mappings":"qSAIMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,6GAENL,EAAIM,IAAI,wBAFF,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,sCAK7BC,QAAQC,MAAM,kCAAd,MAL6B,8DAAH,qDAUjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDZ,EAAIM,IAAI,gBAAiB,CAC9CH,OAAQ,CACNU,MAAOD,KAJa,cAElBL,EAFkB,yBAOjBA,EAASC,MAPQ,sCASxBC,QAAQC,MAAM,0BAAd,MATwB,8DAAH,sDAcZI,EAAe,mCAAG,WAAMC,GAAN,gGAEJf,EAAIM,IAAJ,kBAAmBS,IAFf,cAErBR,EAFqB,yBAGpBA,EAASC,MAHW,sCAK3BC,QAAQC,MAAM,gCAAd,MAL2B,8DAAH,sDAUfM,EAAe,mCAAG,WAAMD,GAAN,gGAEJf,EAAIM,IAAJ,kBAAmBS,EAAnB,aAFI,cAErBR,EAFqB,yBAGpBA,EAASC,MAHW,sCAK3BC,QAAQC,MAAM,gCAAd,MAL2B,8DAAH,sDAUfO,EAAY,mCAAG,WAAMF,GAAN,gGAEDf,EAAIM,IAAJ,kBAAmBS,EAAnB,aAFC,cAElBR,EAFkB,yBAGjBA,EAASC,MAHQ,sCAKxBC,QAAQC,MAAM,4BAAd,MALwB,8DAAH,qD,wGCfzB,UApCA,WACE,IAAQK,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BL,EAAAA,EAAAA,IAAaF,GAF5C,OAEUQ,EAFV,OAGIF,EAAQE,EAAaH,MAHzB,gDAKIX,QAAQC,MAAM,6BAAd,MALJ,0DADc,uBAAC,WAAD,wBAUdc,EACD,GAAE,CAACT,KAGF,4BACE,kCACA,wBACGK,EAAKK,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,QAEb,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eANdL,EAAMM,GADF,QAatB,C","sources":["components/Api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b2e5d6ef71f6d003ae07c83bfe03fa15';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/movie/week');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async keyword => {\n  try {\n    const response = await api.get('/search/movie', {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie cast', error);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'components/Api/Api';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieCast() {\n      try {\n        const castResponse = await getMovieCast(movieId);\n        setCast(castResponse.cast);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    }\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","console","error","searchMovies","keyword","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","useParams","useState","cast","setCast","useEffect","castResponse","fetchMovieCast","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}