{"version":3,"file":"static/js/76.f7a9adac.chunk.js","mappings":"oSAiEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,+GAENC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAHf,cAEvBI,EAFuB,gBAKVA,EAASC,OALC,cAKvBC,EALuB,yBAMtBA,GANsB,wCAQ7BC,QAAQC,MAAM,kCAAd,MAR6B,+DAAH,qDAajBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDP,MAAM,GAAD,OACvBF,EADuB,gCACSD,EADT,kBAC0BU,IAH9B,cAElBN,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,wCAQxBC,QAAQC,MAAM,0BAAd,MARwB,+DAAH,sDAaZG,EAAe,mCAAG,WAAMC,GAAN,kGAEJT,MAAM,GAAD,OACvBF,EADuB,iBACNW,EADM,oBACaZ,IAHd,cAErBI,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,wCAQ3BC,QAAQC,MAAM,gCAAd,MAR2B,+DAAH,sDAafK,EAAe,mCAAG,WAAMD,GAAN,kGAEJT,MAAM,GAAD,OACvBF,EADuB,iBACNW,EADM,4BACqBZ,IAHtB,cAErBI,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,wCAQ3BC,QAAQC,MAAM,gCAAd,MAR2B,+DAAH,sDAafM,EAAY,mCAAG,WAAMF,GAAN,kGAEDT,MAAM,GAAD,OACvBF,EADuB,iBACNW,EADM,4BACqBZ,IAHzB,cAElBI,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,wCAQxBC,QAAQC,MAAM,6BAAd,MARwB,+DAAH,qD,oICvHzB,EAAiC,6BAAjC,EAA2E,yBAA3E,EAAgH,wBAAhH,EAAoJ,wB,SCmCpJ,MA/BA,WACE,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BL,EAAAA,EAAAA,IAAaF,GAF5C,OAEUQ,EAFV,OAGIF,EAAQE,EAAaH,MAHzB,gDAKIV,QAAQC,MAAM,6BAAd,MALJ,0DADc,uBAAC,WAAD,wBAUda,EACD,GAAE,CAACT,KAGF,iBAAKU,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,mBACA,eAAID,UAAWC,EAAf,SACGN,EAAKO,KAAI,SAAAC,GAAK,OACb,eAAmBH,UAAWC,EAA9B,SACGE,EAAMC,MADAD,EAAME,GADF,QAQtB,C,sBClCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO7B,GAEP,YADAuB,EAAOvB,EAET,CAEI4B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Api/Api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// import axios from 'axios';\n\n// const API_KEY = 'b2e5d6ef71f6d003ae07c83bfe03fa15';\n\n// const api = axios.create({\n//   baseURL: 'https://api.themoviedb.org/3/',\n//   params: {\n//     api_key: API_KEY,\n//   },\n// });\n\n// export const getTrendingMovies = async () => {\n//   try {\n//     const response = await api.get('/trending/movie/week');\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching trending movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const searchMovies = async keyword => {\n//   try {\n//     const response = await api.get('/search/movie', {\n//       params: {\n//         query: keyword,\n//       },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error searching movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieDetails = async movieId => {\n//   try {\n//     const response = await api.get(`/movies/${movieId}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching movie details:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieReviews = async movieId => {\n//   try {\n//     const response = await api.get(`/movies/${movieId}/reviews`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching movie reviews:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieCast = async movieId => {\n//   try {\n//     const response = await api.get(`/movies/${movieId}/credits`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching movie cast', error);\n//     throw error;\n//   }\n// };\n\nconst API_KEY = 'b2e5d6ef71f6d003ae07c83bfe03fa15';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async keyword => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${keyword}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast-container\":\"Cast_cast-container__VofqV\",\"cast-title\":\"Cast_cast-title__lvYvA\",\"cast-list\":\"Cast_cast-list__ond-A\",\"cast-item\":\"Cast_cast-item__6xvgR\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'components/Api/Api';\nimport styles from './Cast.module.css';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieCast() {\n      try {\n        const castResponse = await getMovieCast(movieId);\n        setCast(castResponse.cast);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    }\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles['cast-container']}>\n      <h2 className={styles['cast-title']}>Cast</h2>\n      <ul className={styles['cast-list']}>\n        {cast.map(actor => (\n          <li key={actor.id} className={styles['cast-item']}>\n            {actor.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","getTrendingMovies","fetch","response","json","data","console","error","searchMovies","keyword","getMovieDetails","movieId","getMovieReviews","getMovieCast","useParams","useState","cast","setCast","useEffect","castResponse","fetchMovieCast","className","styles","map","actor","name","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}