{"version":3,"file":"static/js/186.c025316c.chunk.js","mappings":"qSAIMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,6GAENL,EAAIM,IAAI,wBAFF,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,sCAK7BC,QAAQC,MAAM,kCAAd,MAL6B,8DAAH,qDAUjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDZ,EAAIM,IAAI,gBAAiB,CAC9CH,OAAQ,CACNU,MAAOD,KAJa,cAElBL,EAFkB,yBAOjBA,EAASC,MAPQ,sCASxBC,QAAQC,MAAM,0BAAd,MATwB,8DAAH,sDAcZI,EAAe,mCAAG,WAAMC,GAAN,gGAEJf,EAAIM,IAAJ,kBAAmBS,IAFf,cAErBR,EAFqB,yBAGpBA,EAASC,MAHW,sCAK3BC,QAAQC,MAAM,gCAAd,MAL2B,8DAAH,sDAUfM,EAAe,mCAAG,WAAMD,GAAN,gGAEJf,EAAIM,IAAJ,kBAAmBS,EAAnB,aAFI,cAErBR,EAFqB,yBAGpBA,EAASC,MAHW,sCAK3BC,QAAQC,MAAM,gCAAd,MAL2B,8DAAH,sDAUfO,EAAY,mCAAG,WAAMF,GAAN,gGAEDf,EAAIM,IAAJ,kBAAmBS,EAAnB,aAFC,cAElBR,EAFkB,yBAGjBA,EAASC,MAHQ,sCAKxBC,QAAQC,MAAM,4BAAd,MALwB,8DAAH,qD,wGCnBzB,UAhCA,WACE,IAAQK,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEkCN,EAAAA,EAAAA,IAAgBD,GAFlD,OAEUQ,EAFV,OAGIF,EAAWE,EAAgBC,SAH/B,gDAKIf,QAAQC,MAAM,gCAAd,MALJ,0DADc,uBAAC,WAAD,wBAUde,EACD,GAAE,CAACV,KAGF,4BACE,qCACA,wBACGK,EAAQM,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAS1B,C","sources":["components/Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b2e5d6ef71f6d003ae07c83bfe03fa15';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/movie/week');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async keyword => {\n  try {\n    const response = await api.get('/search/movie', {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie cast', error);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/Api/Api';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const reviewsResponse = await getMovieReviews(movieId);\n        setReviews(reviewsResponse.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    }\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","console","error","searchMovies","keyword","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","useParams","useState","reviews","setReviews","useEffect","reviewsResponse","results","fetchMovieReviews","map","review","author","content","id"],"sourceRoot":""}