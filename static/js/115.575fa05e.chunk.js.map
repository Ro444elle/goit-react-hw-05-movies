{"version":3,"file":"static/js/115.575fa05e.chunk.js","mappings":"qSAIMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,6GAENL,EAAIM,IAAI,wBAFF,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,sCAK7BC,QAAQC,MAAM,kCAAd,MAL6B,8DAAH,qDAUjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDZ,EAAIM,IAAI,gBAAiB,CAC9CH,OAAQ,CACNU,MAAOD,KAJa,cAElBL,EAFkB,yBAOjBA,EAASC,MAPQ,sCASxBC,QAAQC,MAAM,0BAAd,MATwB,8DAAH,sDAcZI,EAAe,mCAAG,WAAMC,GAAN,gGAEJf,EAAIM,IAAJ,kBAAmBS,IAFf,cAErBR,EAFqB,yBAGpBA,EAASC,MAHW,sCAK3BC,QAAQC,MAAM,gCAAd,MAL2B,8DAAH,sDAUfM,EAAe,mCAAG,WAAMD,GAAN,gGAEJf,EAAIM,IAAJ,kBAAmBS,EAAnB,aAFI,cAErBR,EAFqB,yBAGpBA,EAASC,MAHW,sCAK3BC,QAAQC,MAAM,gCAAd,MAL2B,8DAAH,sDAUfO,EAAY,mCAAG,WAAMF,GAAN,gGAEDf,EAAIM,IAAJ,kBAAmBS,EAAnB,aAFC,cAElBR,EAFkB,yBAGjBA,EAASC,MAHQ,sCAKxBC,QAAQC,MAAM,4BAAd,MALwB,8DAAH,qD,qICpDV,SAASQ,IACtB,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAY,mCAAG,8GAEMb,EAAAA,EAAAA,IAAaS,GAFnB,OAEXb,EAFW,OAGjBgB,EAAUhB,EAASkB,SAHF,gDAMjBhB,QAAQC,MAAM,gCAAd,MANiB,yDAAH,qDAWlB,OACE,4BACE,kBACEgB,KAAK,OACLC,YAAY,uBACZC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,MAA9B,KAGb,mBAAQI,QAASR,EAAjB,qBAEA,wBACGF,EAAOW,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,OAAjBD,EAAME,GADA,QAMxB,C","sources":["components/Api/Api.js","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b2e5d6ef71f6d003ae07c83bfe03fa15';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/movie/week');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async keyword => {\n  try {\n    const response = await api.get('/search/movie', {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await api.get(`/movies/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie cast', error);\n    throw error;\n  }\n};\n","import React, { useState } from 'react';\nimport { searchMovies } from 'components/Api/Api';\n\nexport default function Movies() {\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [movies, setMovies] = useState([]);\n  // const [error, setError] = null;\n\n  const handleSearch = async () => {\n    try {\n      const response = await searchMovies(searchKeyword);\n      setMovies(response.results);\n      // setError(null);\n    } catch (error) {\n      console.error('Error fetching movies search:', error);\n      // setError(error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search for movies...\"\n        value={searchKeyword}\n        onChange={e => setSearchKeyword(e.target.value)}\n      />\n\n      <button onClick={handleSearch}>Search</button>\n      {/* {error && <p>Error:{error.message}</p>} */}\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>{movie.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","console","error","searchMovies","keyword","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","Movies","useState","searchKeyword","setSearchKeyword","movies","setMovies","handleSearch","results","type","placeholder","value","onChange","e","target","onClick","map","movie","title","id"],"sourceRoot":""}